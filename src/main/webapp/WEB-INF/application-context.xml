<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<bean id="userService" class="example.springmvc.model.users.UserService"></bean>
	
	<!-- Dummy/In-memory storage implementation -->
	<!-- <bean id="userStorage" class="example.springmvc.model.users.impl.UserStorageDummyImpl"></bean>  -->
	<!-- <bean id="blogEntryStorage" class="example.springmvc.model.blog.impl.BlogEntryStorageDummyImpl"></bean> -->
	
	<!-- MongoDB storage implementation  -->
	<!-- <bean id="userStorage" class="example.springmvc.model.users.impl.UserStorageMongoDbImpl"></bean> -->
	<!-- <bean id="blogEntryStorage" class="example.springmvc.model.blog.impl.BlogEntryMongoDbImpl"></bean> -->
	
	<!-- SQL/Hibernate storage implementation  -->
	<bean id="userStorage" class="example.springmvc.model.users.impl.UserStorageSQLImpl"></bean>
	<bean id="blogEntryStorage" class="example.springmvc.model.blog.impl.BlogEntryStorageSQLImpl"></bean>

	<!-- Hibernate -->
	<!-- retrieve data source via jndi -->
	<jee:jndi-lookup id="jndiDataSource" jndi-name="jdbc/mysql"></jee:jndi-lookup>
	
	<!-- manually defined data source -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/test" />
		<property name="username" value="root" />
		<property name="password" value="system" />
	</bean>

	<bean id="sessionFactory"
			class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="jndiDataSource" />
		<property name="annotatedClasses">
			<list>
				<value>example.springmvc.model.users.User</value>
				<value>example.springmvc.model.blog.BlogEntry</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<tx:annotation-driven />


	<!-- MongoDB -->
	
	<bean id="mongo" class="com.mongodb.Mongo"></bean>

	<bean id="mongoFactory"
		class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
		<constructor-arg name="mongo" ref="mongo"></constructor-arg>
		<constructor-arg name="databaseName" value="springmvc"></constructor-arg>
	</bean>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoFactory"></constructor-arg>
	</bean>
	
</beans>